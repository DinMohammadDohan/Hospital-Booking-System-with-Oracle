
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JFrame;
//import java.sql.SQLException;
//import java.util.logging.Level;
//import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import oracle.sql.*;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Lenovo
 */
public class Doctor extends javax.swing.JFrame {

    Connection con= null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    public Doctor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jadddoc = new javax.swing.JButton();
        jremovedoc = new javax.swing.JButton();
        jupdatedoc = new javax.swing.JButton();
        jLabeldid = new javax.swing.JLabel();
        dsearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabeldname = new javax.swing.JLabel();
        did = new javax.swing.JTextField();
        dname = new javax.swing.JTextField();
        jLabeldcont = new javax.swing.JLabel();
        jLabeldage = new javax.swing.JLabel();
        dcont = new javax.swing.JTextField();
        dage = new javax.swing.JTextField();
        jLabeldreport = new javax.swing.JLabel();
        dreport = new javax.swing.JTextField();
        jLabeldroom = new javax.swing.JLabel();
        droom = new javax.swing.JTextField();
        jLabelddesig = new javax.swing.JLabel();
        ddesig = new javax.swing.JTextField();
        jLabeldsal = new javax.swing.JLabel();
        dsal = new javax.swing.JTextField();
        jLabeldeptname = new javax.swing.JLabel();
        ddeptname = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jadddoc.setText("Add Doctor");
        jadddoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jadddocActionPerformed(evt);
            }
        });

        jremovedoc.setText("Remove Doctor");
        jremovedoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jremovedocActionPerformed(evt);
            }
        });

        jupdatedoc.setText("Update");
        jupdatedoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jupdatedocActionPerformed(evt);
            }
        });

        jLabeldid.setText("Doctor_ID:");

        dsearch.setText("Search");
        dsearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dsearchActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bodoni MT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 0, 204));
        jLabel1.setText("Doctor Details");

        jLabeldname.setText("Doctor_Name:");

        jLabeldcont.setText("Doctor_ContactNo:");

        jLabeldage.setText("Doctor_Age:");

        jLabeldreport.setText("Report_NO :");

        jLabeldroom.setText("Room_NO :");

        jLabelddesig.setText("Doctor_Designation:");

        jLabeldsal.setText("Salary:");

        jLabeldeptname.setText("Department_Name:");

        jButton1.setText("Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(480, 480, 480))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabeldid)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabeldage)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dage, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(did, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabeldcont)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dcont, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabeldname)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(dname, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(90, 90, 90)
                                            .addComponent(jLabeldeptname)
                                            .addGap(18, 18, 18)
                                            .addComponent(ddeptname, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabeldsal)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(dsal, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabeldroom)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(droom, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                    .addComponent(jLabeldreport)
                                                    .addGap(18, 18, 18)
                                                    .addComponent(dreport, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(86, 86, 86)
                                        .addComponent(jLabelddesig)
                                        .addGap(18, 18, 18)
                                        .addComponent(ddesig, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(110, 190, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jupdatedoc, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jremovedoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 190, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dsearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jadddoc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(152, 152, 152))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addGap(48, 48, 48))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabeldid)
                            .addComponent(did, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabeldname)
                                    .addComponent(dname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(dage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(8, 8, 8)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabeldcont)
                                            .addComponent(dcont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabeldage)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabeldsal))
                                .addGap(5, 5, 5)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(droom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabeldroom))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dreport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabeldreport)))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabeldeptname)
                            .addComponent(ddeptname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelddesig)
                            .addComponent(ddesig, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(dsearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jadddoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jremovedoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jupdatedoc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 317, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jadddocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jadddocActionPerformed
       
        
        
        try {
            
            String Doctor_Name,Department_Name,Doctor_Designation;
            int Doctor_Age,Doctor_ContactNo,Room_NO,Report_NO,Salary;

            int Doctor_ID;
            Doctor_ID = Integer.parseInt(did.getText());
            Doctor_Name = dname.getText();
            
            Doctor_Age = Integer.parseInt(dage.getText());
            Doctor_ContactNo=Integer.parseInt(dcont.getText());
            
            Department_Name=ddeptname.getText();
            Doctor_Designation=ddesig.getText();
            Salary = Integer.parseInt(dsal.getText());
            Room_NO=Integer.parseInt(droom.getText());
            Report_NO=Integer.parseInt(dreport.getText());
            
            
            
            
            //insert query
             Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","DIN","password");
             
            
            PreparedStatement pst;
            String sql ="{call adddoctor(?,?,?,?,?,?,?,?,?)}";
            pst = con.prepareStatement(sql);
            
            pst.setInt(1,Doctor_ID);
            pst.setString(2,Doctor_Name);
        
            pst.setInt(3, Doctor_Age);
            pst.setInt(4, Doctor_ContactNo);
          
            pst.setString(5, Department_Name);
            pst.setString(6, Doctor_Designation);
            
            pst.setInt(7, Salary);
            pst.setInt(8, Room_NO);
            pst.setInt(9, Report_NO);
            JOptionPane.showMessageDialog (null," Added Successfully");

            if (did.getText().isEmpty()){

                System.out.println("Plz Fill up blanks");

            }
            else if (dname.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }

           
             else if (dage.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }
              else if (dcont.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }
              
                else if (ddeptname.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }
                 else if (ddesig.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }
                  else if (dsal.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }
                   else if (droom.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }
                    else if (dreport.getText().isEmpty()){
                System.out.println("Plz Fill up blanks");
            }
            
            else {
                  pst.execute();
//               
            }

        } catch(Exception ex) {
            //ex.printStackTrace();
           JOptionPane.showMessageDialog(null, ex);
             
        } 
       
        // TODO add your handling code here:
    }//GEN-LAST:event_jadddocActionPerformed
     
       
    

  public static void DoctorTrigger (int Doctor_ID, String Doctor_Name, int Doctor_Age,int Doctor_ContactNo,String Department_Name,String Doctor_Designation,int Salary,int Room_NO,int Report_NO)
                                                        throws SQLException
  {
    Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","DIN","password");
    String sql = "{call Restricted_Insert}";
    try
    {
        
        
     PreparedStatement pst = con.prepareStatement(sql);
            
            pst.setInt(1,Doctor_ID);
            pst.setString(2,Doctor_Name);
        
            pst.setInt(3, Doctor_Age);
            pst.setInt(4, Doctor_ContactNo);
          
            pst.setString(5, Department_Name);
            pst.setString(6, Doctor_Designation);
            
            pst.setInt(7, Salary);
            pst.setInt(8, Room_NO);
            pst.setInt(9, Report_NO);
    }
    catch (SQLException e)
    {
      System.err.println(e.getMessage());
    }
  }

    
    private void jremovedocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jremovedocActionPerformed

        try{
            //Connection conn;
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","DIN","password");
            PreparedStatement pst;
            String sql="{ call delete_doctor (?)}";
            pst=con.prepareStatement(sql);

            pst.setInt(1,Integer.parseInt(did.getText()) );
            pst.executeUpdate();
            JOptionPane.showMessageDialog (null," Deleted Successfully");
            con.close();

                did.setText(" ");
                dname.setText(" ");
               
                dage.setText(" ");
                dcont.setText(" ");
                
                ddeptname.setText(" ");
                ddesig.setText(" ");
                dsal.setText(" ");
                droom.setText(" ");
                dreport.setText(" ");

        }

        catch(Exception e)

        {
             e.printStackTrace();
            JOptionPane.showMessageDialog (null,"Something is Wrong.Please check again.");

        }
        

               
               
    }//GEN-LAST:event_jremovedocActionPerformed

    private void jupdatedocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jupdatedocActionPerformed

        try{

             String Doctor_Name,Department_Name,Doctor_Designation;
            int Doctor_Age,Doctor_ContactNo,Salary,Room_NO,Report_NO;
            
            
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","DIN","password");
            //PreparedStatement pst=con.prepareStatement();
            //pst = con.prepareStatement(sql);
             int Doctor_ID;
            Doctor_ID = Integer.parseInt(did.getText());
            Doctor_Name = dname.getText();
            
            Doctor_Age = Integer.parseInt(dage.getText());
            Doctor_ContactNo=Integer.parseInt(dcont.getText());
            
            Department_Name=ddeptname.getText();
            Doctor_Designation=ddesig.getText();
            Salary=Integer.parseInt(dsal.getText());
            Room_NO=Integer.parseInt(droom.getText());
            Report_NO=Integer.parseInt(dreport.getText());
            //String sq1 = " update DOCTOR set DOCTOR_ID='"+Doctor_ID+"', Doctor_Name='"+Doctor_Name+"',Doctor_Age='"+Doctor_Age+"',Doctor_ContactNo='"+Doctor_ContactNo+"',Department_Name='"+Department_Name+"',Doctor_Designation='"+Doctor_Designation+"',Salary='"+Salary+"',Room_NO='"+Room_NO+"',Report_NO='"+Report_NO+"'where DOCTOR_ID='"+Doctor_ID+"'";
            String sql="{ call UPDATE_DOCTOR (?,?,?,?,?,?,?,?,?)}";
             
            
          
           pst=con.prepareStatement(sql);
           pst.setInt(1,Integer.parseInt(did.getText()) );
           pst.setString(2,dname.getText()) ;
           pst.setInt(3,Integer.parseInt(dage.getText()) );
           pst.setInt(4,Integer.parseInt(dcont.getText()) );
           pst.setString(5,ddeptname.getText()) ;
           pst.setString(6,ddesig.getText()) ;
           pst.setInt(7,Integer.parseInt(dsal.getText()) );
           pst.setInt(8,Integer.parseInt(droom.getText()) );
           pst.setInt(9,Integer.parseInt(dreport.getText()) );
           
           
            pst.executeUpdate();


            JOptionPane.showMessageDialog(null,"Updated Successfully");
           

        }

        catch(  Exception ex){
             ex.printStackTrace();
            JOptionPane.showMessageDialog(null,ex);
    }//GEN-LAST:event_jupdatedocActionPerformed
    }
    private void dsearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dsearchActionPerformed

        try{
             Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:XE","DIN","Hridita81369");

            String sql="select * from DOCTOR where DOCTOR_ID=?";

            PreparedStatement stat=con.prepareStatement(sql);
            stat.setInt(1,Integer.parseInt(did.getText()));
            ResultSet rs=stat.executeQuery();
            if(rs.next())
            {
                did.setText(rs.getString("Doctor_ID"));
                dname.setText(rs.getString("Doctor_Name"));
                dage.setText(rs.getString("Doctor_Age"));
                 dcont.setText(rs.getString("Doctor_ContactNo"));
                ddeptname.setText(rs.getString("Department_Name"));
                ddesig.setText(rs.getString("Doctor_Designation"));
                 dsal.setText(rs.getString("Salary"));
                droom.setText(rs.getString("Room_NO"));
                dreport.setText(rs.getString("Report_NO"));
                
                
                
                
                

            }
            else{

                JOptionPane.showMessageDialog(null, "Not Found");
            }

            con.close();
        }

        catch(Exception e){

            JOptionPane.showMessageDialog(null, e);

            }

    }//GEN-LAST:event_dsearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Admin rg=new Admin();
        rg.setVisible(true);
        rg.pack();
        rg.setLocationRelativeTo(null);
        rg.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Doctor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Doctor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dage;
    private javax.swing.JTextField dcont;
    private javax.swing.JTextField ddeptname;
    private javax.swing.JTextField ddesig;
    private javax.swing.JTextField did;
    private javax.swing.JTextField dname;
    private javax.swing.JTextField dreport;
    private javax.swing.JTextField droom;
    private javax.swing.JTextField dsal;
    private javax.swing.JButton dsearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabeldage;
    private javax.swing.JLabel jLabeldcont;
    private javax.swing.JLabel jLabelddesig;
    private javax.swing.JLabel jLabeldeptname;
    private javax.swing.JLabel jLabeldid;
    private javax.swing.JLabel jLabeldname;
    private javax.swing.JLabel jLabeldreport;
    private javax.swing.JLabel jLabeldroom;
    private javax.swing.JLabel jLabeldsal;
    private javax.swing.JButton jadddoc;
    private javax.swing.JButton jremovedoc;
    private javax.swing.JButton jupdatedoc;
    // End of variables declaration//GEN-END:variables
}
